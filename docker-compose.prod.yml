version: '3.8'

services:

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: drs_backend
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-for-jwt-please-change-in-production}
      - CORS_ORIGINS=https://${DOMAIN:-localhost},http://${DOMAIN:-localhost}
      - SMTP_HOST=${SMTP_HOST:-smtp.example.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL:-noreply@example.com}
      - SMTP_USE_TLS=${SMTP_USE_TLS:-1}
    networks:
      - drs_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: drs_frontend
    restart: always
    depends_on:
      - backend
    networks:
      - drs_network

  # Nginx for routing and SSL termination
  nginx:
    image: nginx:alpine
    container_name: drs_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - drs_network

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: drs_certbot
    volumes:
      - certbot_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    command: renew
    depends_on:
      - nginx

networks:
  drs_network:
    driver: bridge

volumes:
  certbot_data:
  certbot_www:
